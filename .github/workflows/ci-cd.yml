name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 httpx gunicorn scikit-learn joblib
        pip install -e .
    
    - name: Create test data directories
      run: |
        mkdir -p dashboard/data
        echo '{"r2_score": 0.9121, "model_type": "RandomForestRegressor", "parameters": {"n_estimators": 100}, "feature_names": ["votes", "cost_for_two", "location", "cuisine_type", "online_order"]}' > models/model_metadata.json
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests with pytest
      run: |
        python -m pytest tests/ --cov=src --cov-report=xml -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

    - name: Deploy to Render
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
          -H "accept: application/json" \
          -H "authorization: Bearer ${{ secrets.RENDER_API_KEY }}" 